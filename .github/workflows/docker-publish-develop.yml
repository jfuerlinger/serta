name: docker-publish-develop

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - feature/ci-cd

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: serta-dev:latest
  AZURE_CONTAINER_REGISTRY: sertadev.azurecr.io

jobs:
  # Run tests.
  # See also https://docs.docker.com/docker-hub/builds/automated-testing/
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2

#       - name: Run tests
#         run: |
#           if [ -f docker-compose.test.yml ]; then
#             docker-compose --file docker-compose.test.yml build
#             docker-compose --file docker-compose.test.yml run sut
#           else
#             docker build . --file Dockerfile
#           fi

  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    #needs: test

    runs-on: ubuntu-latest
    #if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2


      - name: Azure Container Registry Build and Publish
        uses: ams0/acr-task-github-action@v1
        with:
          # Service Principal with Contributor role on the ACR
          service_principal: ${{ secrets.IDENTITY_NAME }}
          service_principal_password: ${{ secrets.IDENTITY_PASSWORD }}
          # Azure Container Registry tenant
          tenant: ${{ secrets.AZURE_TENANT_ID }}
          # The name of the ACR, minus the .azurecr.io
          registry: $AZURE_CONTAINER_REGISTRY
          # Repository to use
          repository: 'https://github.com/jfuerlinger/serta'
          # Docker image name
          image: serta-dev
          # Docker image tag, default to the commit SHA
          tag: latest
          # Branch to build from, defaults to master
          branch: feature/ci-cd
          # The folder in the Github repo that holds the source
          folder: .
          # The location of the Dockerfile; defaults to ./Dockerfile
          dockerfile: Dockerfile


      # - name: Build image
      #   run: docker build --file Dockerfile --tag $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME .

#      - name: Log into registry
#        run: echo "${{ secrets.DEV_ACR_PASSWORD }}" | docker login $AZURE_CONTAINER_REGISTRY -u ${{ secrets.DEV_ACR_USERNAME }} --password-stdin

      # - name: Log into registry
      #   uses: Azure/docker-login@v1
      #   with:
      #     # Container registry username
      #     username: ${{ secrets.DEV_ACR_USERNAME }}
      #     # Container registry password
      #     password: ${{ secrets.DEV_ACR_PASSWORD }}
      #     # Container registry server url
      #     login-server: $AZURE_CONTAINER_REGISTRY

      # - name: Push image
      #   run: |
      #     docker push $AZURE_CONTAINER_REGISTRY/$IMAGE_NAME
